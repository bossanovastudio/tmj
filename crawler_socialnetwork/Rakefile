require "zlib"
require "rake/testtask"
require "yaml"
require "active_record"
require "dotenv"

Dotenv.load "../env/.env"

namespace :db do
  db_config = {
    adapter:  'postgresql',
    encoding: 'unicode',
    database: ENV['CRAWLER_RDS_DB_NAME'],
    username: ENV['CRAWLER_RDS_USERNAME'],
    password: ENV['CRAWLER_RDS_PASSWORD'],
    host:     ENV['CRAWLER_RDS_HOSTNAME'],
    port:     ENV['CRAWLER_RDS_PORT']
  }

  db_config_admin = db_config.merge({
    database: 'postgres',
    schema_search_path: 'public'
  })

  desc "Create the database"
  task :create do
    ActiveRecord::Base.establish_connection(db_config_admin)
    ActiveRecord::Base.connection.create_database(ENV['CRAWLER_RDS_DB_NAME'])
    puts "Database created."
  end

  desc "Migrate the database"
  task :migrate do
    ActiveRecord::Base.establish_connection(db_config)
    ActiveRecord::Migrator.migrate("db/migrate/")
    Rake::Task["db:schema"].invoke
    puts "Database migrated."
  end

  desc "Drop the database"
  task :drop do
    ActiveRecord::Base.establish_connection(db_config_admin)
    ActiveRecord::Base.connection.drop_database(ENV['CRAWLER_RDS_DB_NAME'])
    puts "Database deleted."
  end

  desc "Reset the database"
  task :reset => [:drop, :create, :migrate]

  desc 'Create a db/schema.rb file that is portable against any DB supported by AR'
  task :schema do
    ActiveRecord::Base.establish_connection(db_config)
    require 'active_record/schema_dumper'
    filename = "db/schema.rb"
    File.open(filename, "w:utf-8") do |file|
      ActiveRecord::SchemaDumper.dump(ActiveRecord::Base.connection, file)
    end
  end
end

Rake::TestTask.new(:test) do |t|
  t.libs << "test"
  t.libs << "lib"
  t.test_files = FileList['test/**/*_test.rb']
end

task :default => :test
